name: schedule-build

on:
  schedule:
    - cron: '0 22 * * *'
  pull_request:
    branches:
      - master
    paths-ignore:
      - '**.md'

env:
  DOCKER-IMAGE-BASE-AMD: ubeike/raspicat-noetic:amd64-base
  DOCKER-IMAGE-BASE-ARM: ubeike/raspicat-noetic:arm64v8-base
  DOCKER-IMAGE-ARM: ubeike/raspicat-noetic:arm64v8
  DOCKER-IMAGE-AMD-NVIDIA: ubeike/raspicat-noetic:amd64-nvidia
  DOCKER-CONTEXT: ./
  DOCKER-FILE-BASE-AMD: ./.github/Dockerfile.raspicat-amd64-base
  DOCKER-FILE-BASE-ARM: ./.github/Dockerfile.raspicat-arm64v8-base
  DOCKER-FILE-ARM: ./.github/Dockerfile.raspicat-schedule-build
  DOCKER-FILE-AMD-NVIDIA: ./.github/Dockerfile.raspicat-amd64-nvidia

jobs:
  # Create-Base-Image:
  #   runs-on: ubuntu-20.04
  #   timeout-minutes: 60

  #   steps:
  #     - name: Run actions/checkout@v2 
  #       uses: actions/checkout@v2
      
  #     - name: Set up Docker Buildx
  #       id: buildx
  #       uses: docker/setup-buildx-action@v1

  #     - name: Login to DockerHub
  #       uses: docker/login-action@v1 
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}
      
  #     - name: Create id_rsa
  #       run: |
  #         mkdir -p ./.github/ssh/
  #         echo "${{ secrets.SSH_PRIVATE_KEY}}" > ./.github/ssh/id_rsa

  #     - name: Build and push docker image amd64 base
  #       uses: docker/build-push-action@v2
  #       with:
  #         context: ${{ env.DOCKER-CONTEXT }}
  #         file: ${{ env.DOCKER-FILE-BASE-AMD }}
  #         builder: ${{ steps.buildx.outputs.name }}
  #         tags: ${{ env.DOCKER-IMAGE-BASE-AMD }}
  #         push: true
      
  #     - name: Qemu install
  #       run: |
  #         sudo apt install qemu-user-static

  #     - name: Build and push docker image arm64v8 base
  #       uses: docker/build-push-action@v2
  #       with:
  #         context: ${{ env.DOCKER-CONTEXT }}
  #         file: ${{ env.DOCKER-FILE-BASE-ARM }}
  #         builder: ${{ steps.buildx.outputs.name }}
  #         tags: ${{ env.DOCKER-IMAGE-BASE-ARM }}
  #         push: true
      
  Build:
    runs-on: ubuntu-20.04
    timeout-minutes: 40
    # needs: Create-Base-Image
    
    steps:
      - name: Run actions/checkout@v2 
        uses: actions/checkout@v2
      
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Qemu install
        run: |
          sudo apt install qemu-user-static

      - name: Build and push docker image arm64v8
        uses: docker/build-push-action@v2
        with:
          context: ${{ env.DOCKER-CONTEXT }}
          file: ${{ env.DOCKER-FILE-ARM }}
          builder: ${{ steps.buildx.outputs.name }}
          tags: ${{ env.DOCKER-IMAGE-ARM }}
          push: true
      
      - name: Build and push docker image amd64 nvidia
        uses: docker/build-push-action@v2
        with:
          context: ${{ env.DOCKER-CONTEXT }}
          file: ${{ env.DOCKER-FILE-AMD-NVIDIA }}
          builder: ${{ steps.buildx.outputs.name }}
          tags: ${{ env.DOCKER-IMAGE-AMD-NVIDIA }}
          push: true